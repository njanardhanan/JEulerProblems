package com.jsoft.jeuler.problems;

import com.jsoft.jeuler.solver.EulerSolver;

import java.math.BigInteger;
import java.util.HashSet;
import java.util.Set;

public class JEulerProblem_0029 extends EulerSolver {

    public JEulerProblem_0029(int problemNumber) {
        super(problemNumber);
    }

    @Override
    public String solve() {
        int limit = 100;
        Set<String> combi = new HashSet();
        for(int i=2; i<=limit; i++) {
            BigInteger x = new BigInteger(Integer.toString(i));
            for(int j=2; j<=limit; j++) {
                combi.add(x.pow(j).toString());
            }
        }

        //combi.stream().forEach(System.out::println);

        return Integer.toString(combi.size());
    }

    @Override
    public String getProblemStatement() {
        return "How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?";
    }
}
